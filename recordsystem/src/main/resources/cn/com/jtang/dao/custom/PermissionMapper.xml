<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.jtang.dao.custom.PermissionMapper">
	<resultMap id="BaseResultMap" type="cn.com.jtang.po.Authority">
		<id column="authorityId" jdbcType="VARCHAR" property="authorityid" />
    <result column="authcode" jdbcType="VARCHAR" property="code" />
    <result column="authname" jdbcType="VARCHAR" property="name" />
    <result column="authdescription" jdbcType="VARCHAR" property="description" />
	</resultMap>
	<resultMap id="AuthGroupPerm" type="cn.com.jtang.po.permission.AuthGroupPermission">
		<id column="authgroupid" jdbcType="VARCHAR" property="groupid" />
		<result column="authgroupname" jdbcType="VARCHAR" property="groupname" />
		<collection property="authorityList" ofType="cn.com.jtang.po.Authority" >
			<id column="authorityId" jdbcType="VARCHAR" property="authorityid" />
			<result column="code" jdbcType="VARCHAR" property="code" />
			<result column="name" jdbcType="VARCHAR" property="name" />
			<result column="description" jdbcType="VARCHAR" property="description" />
		</collection>
	</resultMap>

	<sql id="Base_Column_List">
		a.authorityId as authorityId,
		a.code as authcode,
		a.name as authname,
		a.description as authdescription
	</sql>

	<insert id="insertBatch" parameterType="map">
		insert into roleauthority(roleId,authorityId) values
		<foreach collection="roleAuths" item="roleauth" index="index" separator="," >
			(#{roleauth.roleid},#{roleauth.authorityid})
		</foreach>
	</insert>

	<insert id="insertUGBatch" parameterType="map">
		insert into usergroupauth(usergroupid,authid) values
		<foreach collection="ugAuths" item="ugauth" index="index" separator="," >
			(#{ugauth.usergroupid},#{ugauth.authid})
		</foreach>
	</insert>

	<select id="selectAuthGroupPerm" resultMap="AuthGroupPerm" parameterType="map" >
		select * from authority join authgroup on authority.authgroupid = authgroup.authgroupid
	</select>

	<select id="selectAuthByUserGroup" resultMap="cn.com.jtang.dao.AuthorityMapper.BaseResultMap" parameterType="map" >
		<!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Aug 01 17:23:28 CST 2016.
        -->
		select * from usergroupauth join authority on usergroupauth.authid = authority.authorityId where usergroupid = #{usergroupid,jdbcType=VARCHAR}
	</select>
	<select id="selectAuthidsByUserGroup" resultType="String" parameterType="map" >
		<!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Aug 01 17:23:28 CST 2016.
        -->
		select DISTINCT authid from usergroupauth where usergroupid = #{usergroupid,jdbcType=VARCHAR}
	</select>
	<select id="selectUserIdsByUserGroup" resultType="String" parameterType="map" >
		<!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Aug 01 17:23:28 CST 2016.
        -->
		select DISTINCT userId from user where usergroup = #{usergroupid,jdbcType=VARCHAR}
	</select>

	<select id="selectAuthidsByRole" parameterType="Integer" resultType="String">
		select DISTINCT authorityId from roleauthority where roleId = #{roleid,jdbcType=VARCHAR}
	</select>
	<select id="selectByExample" parameterType="cn.com.jtang.po.custom.PermissionExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from
		<if test="user">
      user as u,
    </if>
      role as r, roleauthority as ra, authority as a
		where
		<if test="user">
		  <choose>
        <when test="user.userid">
          u.userid = #{user.userid} and 
        </when>
        <when test="user.username">
          u.username = #{user.username} and
        </when>
      </choose>
		  u.roleid = r.roleid and
    </if>
		<if test="role">
		  <choose>
        <when test="role.roleid">
		      r.roleid = #{role.roleid} and 
        </when>
        <when test="role.code">
		      r.code = #{role.code} and 
        </when>
      </choose>
    </if>
    r.roleid = ra.roleid and ra.authorityid = a.authorityid
    <if test="permission != null">
      and a.code = #{permission}
    </if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="start &gt; -1">
			limit #{start} , #{limit}
		</if>
	</select>
	
	<resultMap id="RoleResultMap" type="cn.com.jtang.po.Role">
		<id column="roleId" jdbcType="VARCHAR" property="roleid" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
	</resultMap>

	<sql id="Role_Column_List">
		r.roleId as roleId,
		r.code as code,
		r.name as name
	</sql>
	
	<select id="selectRoleByExample" parameterType="cn.com.jtang.po.custom.PermissionExample"
		resultMap="RoleResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Role_Column_List" />
		from
		<if test="user">
      user as u,
    </if>
      role as r
		where
		<if test="user">
		  <choose>
        <when test="user.userid">
          u.userid = #{user.userid} and 
        </when>
        <when test="user.username">
          u.username = #{user.username} and
        </when>
      </choose>
		  u.roleid = r.roleid
    </if>
		<if test="role">
		  <choose>
        <when test="role.roleid">
		      r.roleid = #{role.roleid}
        </when>
        <when test="role.code">
		      r.code = #{role.code} 
        </when>
      </choose>
    </if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="start &gt; -1">
			limit #{start} , #{limit}
		</if>
	</select>

</mapper>